{#
    Copyright DB InfraGO AG and contributors
    SPDX-License-Identifier: Apache-2.0
#}

{% set table_attributes='class="polarion-Document-table" style="margin: auto;margin-left: 0px;empty-cells: show;border-collapse: collapse;max-width: 1280px;border: 1px solid #CCCCCC;"' %}
{% set th_attributes='style="height: 12px;text-align: left;vertical-align: top;font-weight: bold;background-color: #F0F0F0;border: 1px solid #CCCCCC;padding: 5px;"' %}
{% set td_attributes='style="height: 12px;text-align: left;vertical-align: top;line-height: 18px;border: 1px solid #CCCCCC;padding: 5px;"' %}

{% macro render_content(component, model, session) %}
    {{ heading(2, component.name, session)}}
    {{ heading(3, "Logical Component Context", session)}}
    <workitem id="interface_partners-{{ component.uuid }}">The figure below provides an overview of the logical subsystem and external entities that either require the functionality of <b>{{ component.name }}</b> (expect outputs) or enable it (provide inputs). The figure also identifies the interfaces between the subsystem and its environment.</workitem>
    {{ insert_work_item(component, session) }}
    {{ heading(3, "Logical interface partners of " + component.name, session) }}

    {%- set lexcs = [] -%}
    {%- for port in component.ports -%}
        {%- for lexc in port.exchanges -%}
            {%- set _ = lexcs.append([lexc, lexc.source.owner if lexc.source.owner != component else lexc.target.owner]) -%}
        {%- endfor -%}
    {%- endfor -%}

    {%- for partner_cmp_name in lexcs | map(attribute=1) | map(attribute="name") | unique -%}
        {%- set partner = lexcs | map(attribute=1) | selectattr("name", "equalto", partner_cmp_name) | first -%}
        {{- heading(4, partner.name, session) -}}
        {{- insert_work_item(partner, session) -}}

        {%- set spp = lexcs | map(attribute=0) | selectattr("source.owner", "equalto", partner) | list -%}
        {%- set tpp = lexcs | map(attribute=0) | selectattr("target.owner", "equalto", partner) | list -%}
        {%- for lexc in (spp + tpp) -%}
            {{- heading(5, "Logical interface " + lexc.name, session) -}}
            {{- insert_work_item(lexc, session) -}}
        {%- endfor -%}
    {%- endfor -%}
{% endmacro %}
